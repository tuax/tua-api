(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{195:function(t,e,a){"use strict";a.r(e);var s=a(6),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"辅助函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#辅助函数"}},[t._v("#")]),t._v(" 辅助函数")]),t._v(" "),a("h2",{attrs:{id:"getsyncfnmapbyapis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getsyncfnmapbyapis"}},[t._v("#")]),t._v(" getSyncFnMapByApis")]),t._v(" "),a("p",[t._v("将所有的 api 对象拍平成一个 Map，与 "),a("code",[t._v("tua-storage")]),t._v(" 配合使用可以将各个发起 "),a("code",[t._v("api")]),t._v(" 的函数的 "),a("code",[t._v("key")]),t._v(" 与其自身绑定。")]),t._v(" "),a("h2",{attrs:{id:"getprefetchfnkeysbysyncfnmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getprefetchfnkeysbysyncfnmap"}},[t._v("#")]),t._v(" getPreFetchFnKeysBySyncFnMap")]),t._v(" "),a("p",[t._v("过滤出有默认参数的接口（接口参数非数组，且不含有 isRequired）。")]),t._v(" "),a("p",[t._v("适用于 node 端发起请求预取数据的场景。")])])}),[],!1,null,null,null);e.default=n.exports}}]);